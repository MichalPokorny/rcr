Dalsi features k implementaci do RCR:
	- procento cernych pixelu
	- pomery cernych pixelu v jednotlivych castech obrazu
	- konvoluce s filtrem na detekci hran?

	- serializace vystupu v lepsim formatu? (LeNeT 7)

	- citlivost na tlak?

	- datasety MNIST, dalsi?
	- alternativni klasifikatory: SVM, deep network?

	- special widget na slovo (s oriznutim prazdnych kusu)

	- napad: pomohlo by mi v oversegmentation vedet, jak dlouhy je ten string?

	- heuristic oversegmentation: zacit s nenaucenou siti?
		- davat vetsi boxiky siti, at se lip uci?
			= necht klasifikator pismen dostava vic nez jenom ostry vyrez.
			  to to mozna hodne zhorsuje.
		=> to by pak chtelo davat siti konzistentne za vstup ctvercove okoli...
			==> NESLO by to udelat s orezavanim.

	- vyzkouset, co se tomu stane, kdyz s temi vecmi budu soupat.


- optimalizovat segmentaci

- segmentator radku: napad na operaci pres souvisle segmenty (ale asi to je dost jalove)
	- operace:
		- spojit dva segmenty co jsou blizko sebe
		- rozdelit segment v zajimavem bode

		- segment budu mit oznaceny podle toho jake pismeno v nem vidim
			- jedna z operaci bude "zmen, jake pismeno si myslim, ze tenhle segment je"

	- budu skorovat segmentace podle ruznych parametru
		- jak pravdepodobne vypada to slovo co z toho ted vypada (Markovovy retezce?)
		- jaka je distribuce sirek segmentu
		- jaky je pomer stran segmentu

- implicitni segmentace
- vytvorit confusion matrix

- segmentace posuvnym okenkem?

- vice korupci?

- vytvorit vice trenovacich dat?

- heuristic oversegmentation: nekde je neco blbe...

- mel bych asi odebrat z klasifikace pismen to orezavani a mel bych to nahradit chytrejsim klasifikatorem...

- napsat aplikacku ktera bude rozpoznavat pismena psana na tabletu

- pri bootstrapovem uceni bych mel i ODTRENOVAVAT SPATNE MATCHE!

- dat logger jako property pro tridu, takze pak bude funovat dependency injection
