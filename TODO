Napady na budouci vstupy pro klasifikatory:
	- procento cernych pixelu
	- pomery cernych pixelu v jednotlivych castech obrazu
	- konvoluce s filtrem na detekci hran

- format vystupu v lepsim formatu (podobne jako LeNeT 7)

- citlivost na tlak

- datasety MNIST a jine
- alternativni klasifikatory: SVM, deep network

	- special widget na slovo (s oriznutim prazdnych kusu)

	- heuristic oversegmentation: zacit s nenaucenou siti?
		- davat vetsi boxiky siti, at se lip uci?
			= necht klasifikator pismen dostava vic nez jenom ostry vyrez.
			  to to mozna hodne zhorsuje.
		=> to by pak chtelo davat siti konzistentne za vstup ctvercove okoli...
			==> NESLO by to udelat s orezavanim.

- optimalizovat segmentaci

- segmentator radku: napad na operaci pres souvisle segmenty (ale asi to je dost jalove)
	- operace:
		- spojit dva segmenty co jsou blizko sebe
		- rozdelit segment v zajimavem bode

		- segment budu mit oznaceny podle toho jake pismeno v nem vidim
			- jedna z operaci bude "zmen, jake pismeno si myslim, ze tenhle segment je"

	- budu skorovat segmentace podle ruznych parametru
		- jak pravdepodobne vypada to slovo co z toho ted vypada (Markovovy retezce?)
		- jaka je distribuce sirek segmentu
		- jaky je pomer stran segmentu

- implicitni segmentace
- vytvorit confusion matrix

- segmentace posuvnym okenkem?

- nahrazeni orezavani obrazu na neprazdnou cast lepsim klasifikatorem

- bootstrapove uceni

- logger jako property tridy, aby slo dependency injection

- ensemble classifier? (mozna jsem si ted moc jisty, kdyz nemam byt?)

- ukladat v datech "jakeho logickeho typu jsou"? (aby existoval type checking, ze se treba nepousti konvolucni neuronova sit na 1D datech)
