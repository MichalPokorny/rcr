#!/usr/bin/ruby -w

require 'rcr/config'

# Zajimave a dlouhe: 18, 19, 20, 21, 22

if ARGV[0] == "-i" || ARGV[0] == "--interactive"
	require 'rcr/gui/segment-word'
	gui = RCR::GUI::SegmentWord.new(RCR::Config.word_segmenter_path, RCR::Config.letter_classifier_path)
	gui.run
else
	require 'rcr/easy'
	require 'rcr/data/image'

	classifier = RCR.build_letter_classifier
	segmentator = RCR.build_word_segmentator

	i = 22

	image = RCR::Data::Image.load(ARGV[0] || File.join(RCR::Config.segmentation_inputs_path, i.to_s, "data.png"))
	segmentation = segmentator.segment(image)

	word_file = File.join(RCR::Config.segmentation_inputs_path, i.to_s, "expect.txt")
	word = if File.exist?(word_file) then File.read(word_file).strip end

	puts "Segmentation says: #{segmentation.detected_text(classifier)}"

	word_segmentation = if word then segmentator.segment_for_word(image, word) end

	filename = "segmented.png"
	segmentator.show_oversegmentation(image) # Must be here.

	if word
		if word_segmentation
			with_best_found = image.dup
			word_segmentation.draw_on_image!(with_best_found)
			with_best_found.save("segmented_#{word}.png")
		else
			puts "Best segmentation for #{word} not found."
		end
	end

	segmentation.draw_on_image!(image)
	image.save(filename)

	puts "Segmented image saved in #{filename}"
end
